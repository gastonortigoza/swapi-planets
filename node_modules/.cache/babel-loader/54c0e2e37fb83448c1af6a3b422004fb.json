{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  planets: [],\n  sortOrder: 'asc',\n  page: 1,\n  perPage: 10\n};\nconst planetsSlice = createSlice({\n  name: 'planets',\n  initialState,\n  reducers: {\n    setCurrentPage: (state, action) => {\n      state.currentPage = action.payload;\n    },\n    changePerPage: (state, action) => {\n      state.perPage = action.payload;\n    },\n    setSortBy: (state, action) => {\n      state.sortBy = action.payload;\n    },\n    setSortOrder: (state, action) => {\n      state.sortOrder = action.payload;\n    },\n    setPlanets: (state, action) => {\n      state.planets = action.payload;\n    },\n    setSortOrder: (state, action) => {\n      state.sortOrder = action.payload;\n    },\n    setPage: (state, action) => {\n      state.page = action.payload;\n    },\n    setPerPage: (state, action) => {\n      state.perPage = action.payload;\n    }\n  }\n});\nexport const {\n  setPlanets,\n  setSortOrder,\n  setPage,\n  setPerPage,\n  changePerPage\n} = planetsSlice.actions;\nexport default planetsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","planets","sortOrder","page","perPage","planetsSlice","name","reducers","setCurrentPage","state","action","currentPage","payload","changePerPage","setSortBy","sortBy","setSortOrder","setPlanets","setPage","setPerPage","actions","reducer"],"sources":["C:/Users/gaston/Desktop/project/qbeyond/swapi-planets/src/features/planets/planetsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  planets: [],\r\n  sortOrder: 'asc',\r\n  page: 1,\r\n  perPage: 10,\r\n};\r\n\r\nconst planetsSlice = createSlice({\r\n  name: 'planets',\r\n  initialState,\r\n  reducers: {\r\n    setCurrentPage: (state, action) => {\r\n        state.currentPage = action.payload;\r\n      },\r\n      changePerPage: (state, action) => {\r\n        state.perPage = action.payload;\r\n      },\r\n      setSortBy: (state, action) => {\r\n        state.sortBy = action.payload;\r\n      },\r\n      setSortOrder: (state, action) => {\r\n        state.sortOrder = action.payload;\r\n      },\r\n     setPlanets: (state, action) => {\r\n      state.planets = action.payload;\r\n    },\r\n    setSortOrder: (state, action) => {\r\n      state.sortOrder = action.payload;\r\n    },\r\n    setPage: (state, action) => {\r\n      state.page = action.payload;\r\n    },\r\n    setPerPage: (state, action) => {\r\n      state.perPage = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setPlanets, setSortOrder, setPage, setPerPage, changePerPage } = planetsSlice.actions;\r\n\r\nexport default planetsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAE,KAAK;EAChBC,IAAI,EAAE,CAAC;EACPC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,YAAY,GAAGN,WAAW,CAAC;EAC/BO,IAAI,EAAE,SAAS;EACfN,YAAY;EACZO,QAAQ,EAAE;IACRC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACE,WAAW,GAAGD,MAAM,CAACE,OAAO;IACpC,CAAC;IACDC,aAAa,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACE,OAAO;IAChC,CAAC;IACDE,SAAS,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACM,MAAM,GAAGL,MAAM,CAACE,OAAO;IAC/B,CAAC;IACDI,YAAY,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACP,SAAS,GAAGQ,MAAM,CAACE,OAAO;IAClC,CAAC;IACFK,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACR,OAAO,GAAGS,MAAM,CAACE,OAAO;IAChC,CAAC;IACDI,YAAY,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACP,SAAS,GAAGQ,MAAM,CAACE,OAAO;IAClC,CAAC;IACDM,OAAO,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACE,OAAO;IAC7B,CAAC;IACDO,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,OAAO,GAAGM,MAAM,CAACE,OAAO;IAChC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,UAAU;EAAED,YAAY;EAAEE,OAAO;EAAEC,UAAU;EAAEN;AAAc,CAAC,GAAGR,YAAY,CAACe,OAAO;AAEpG,eAAef,YAAY,CAACgB,OAAO"},"metadata":{},"sourceType":"module"}