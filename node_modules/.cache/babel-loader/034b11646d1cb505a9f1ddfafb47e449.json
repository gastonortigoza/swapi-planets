{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaston\\\\Desktop\\\\project\\\\qbeyond\\\\swapi-planets\\\\src\\\\features\\\\planets\\\\PlanetsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPlanets, selectPlanets, selectSortedPlanets, selectSorting, sortByPopulation, nextPage, prevPage, selectCurrentPage, selectPerPage, changePerPage } from \"./planetsSlice\";\nimport { fetchPlanets } from \"./planetsApi\";\nimport PlanetsListItem from \"./PlanetsListItem\";\nimport { Pagination, Select } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pagination: {\n    marginTop: theme.spacing(2)\n  },\n  selectPerPage: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\nconst PlanetList = () => {\n  _s();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const planets = useSelector(selectPlanets);\n  const sortedPlanets = useSelector(selectSortedPlanets);\n  const sorting = useSelector(selectSorting);\n  const currentPage = useSelector(selectCurrentPage);\n  const perPage = useSelector(selectPerPage);\n  const [localPlanets, setLocalPlanets] = useState([]);\n  useEffect(() => {\n    dispatch(fetchPlanets({\n      page: currentPage,\n      perPage\n    }));\n  }, [dispatch, currentPage, perPage]);\n  useEffect(() => {\n    setLocalPlanets(sorting === \"population\" ? sortedPlanets.slice((currentPage - 1) * perPage, currentPage * perPage) : planets.slice((currentPage - 1) * perPage, currentPage * perPage));\n  }, [planets, sortedPlanets, sorting, currentPage, perPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(sortByPopulation()),\n      children: \"Ordenar por poblaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      className: classes.selectPerPage,\n      value: perPage,\n      onChange: e => dispatch(changePerPage(e.target.value)),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 10,\n        children: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 20,\n        children: \"20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 30,\n        children: \"30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 40,\n        children: \"40\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 50,\n        children: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: localPlanets.map(planet => /*#__PURE__*/_jsxDEV(PlanetsListItem, {\n        planet: planet\n      }, planet.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      className: classes.pagination,\n      count: Math.ceil(planets.length / perPage),\n      page: currentPage,\n      onChange: (e, value) => {\n        value < currentPage ? dispatch(prevPage()) : dispatch(nextPage());\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(PlanetList, \"DNQV+cVoQEZP8fQLsQscVNNQnL4=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = PlanetList;\nexport default PlanetList;\nvar _c;\n$RefreshReg$(_c, \"PlanetList\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","setPlanets","selectPlanets","selectSortedPlanets","selectSorting","sortByPopulation","nextPage","prevPage","selectCurrentPage","selectPerPage","changePerPage","fetchPlanets","PlanetsListItem","Pagination","Select","makeStyles","jsxDEV","_jsxDEV","useStyles","theme","pagination","marginTop","spacing","marginBottom","PlanetList","_s","classes","dispatch","planets","sortedPlanets","sorting","currentPage","perPage","localPlanets","setLocalPlanets","page","slice","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","e","target","map","planet","name","count","Math","ceil","length","_c","$RefreshReg$"],"sources":["C:/Users/gaston/Desktop/project/qbeyond/swapi-planets/src/features/planets/PlanetsList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setPlanets,\r\n  selectPlanets,\r\n  selectSortedPlanets,\r\n  selectSorting,\r\n  sortByPopulation,\r\n  nextPage,\r\n  prevPage,\r\n  selectCurrentPage,\r\n  selectPerPage,\r\n  changePerPage,\r\n} from \"./planetsSlice\";\r\nimport { fetchPlanets } from \"./planetsApi\";\r\nimport PlanetsListItem from \"./PlanetsListItem\";\r\nimport { Pagination, Select } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pagination: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  selectPerPage: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst PlanetList = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const planets = useSelector(selectPlanets);\r\n  const sortedPlanets = useSelector(selectSortedPlanets);\r\n  const sorting = useSelector(selectSorting);\r\n  const currentPage = useSelector(selectCurrentPage);\r\n  const perPage = useSelector(selectPerPage);\r\n\r\n  const [localPlanets, setLocalPlanets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPlanets({ page: currentPage, perPage }));\r\n  }, [dispatch, currentPage, perPage]);\r\n\r\n  useEffect(() => {\r\n    setLocalPlanets(\r\n      sorting === \"population\"\r\n        ? sortedPlanets.slice((currentPage - 1) * perPage, currentPage * perPage)\r\n        : planets.slice((currentPage - 1) * perPage, currentPage * perPage)\r\n    );\r\n  }, [planets, sortedPlanets, sorting, currentPage, perPage]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => dispatch(sortByPopulation())}>\r\n        Ordenar por poblaci√≥n\r\n      </button>\r\n      <Select\r\n        className={classes.selectPerPage}\r\n        value={perPage}\r\n        onChange={(e) => dispatch(changePerPage(e.target.value))}\r\n      >\r\n        <option value={10}>10</option>\r\n        <option value={20}>20</option>\r\n        <option value={30}>30</option>\r\n        <option value={40}>40</option>\r\n        <option value={50}>50</option>\r\n      </Select>\r\n      <ul>\r\n        {localPlanets.map((planet) => (\r\n          <PlanetsListItem key={planet.name} planet={planet} />\r\n        ))}\r\n      </ul>\r\n      <Pagination\r\n        className={classes.pagination}\r\n        count={Math.ceil(planets.length / perPage)}\r\n        page={currentPage}\r\n        onChange={(e, value) => {\r\n          value < currentPage ? dispatch(prevPage()) : dispatch(nextPage());\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanetList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}