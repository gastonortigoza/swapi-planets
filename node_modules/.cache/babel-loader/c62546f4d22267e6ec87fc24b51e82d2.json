{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchPlanets } from '../planets/planetsApi';\nconst initialState = {\n  planets: [],\n  sortOrder: 'asc',\n  page: 1,\n  perPage: 10\n};\nexport const fetchPlanetsAsync = createAsyncThunk('planets/fetchPlanets', async params => {\n  params.page = params.page || 1;\n  const response = await fetchPlanets(params);\n  return response;\n});\nconst planetsSlice = createSlice({\n  name: 'planets',\n  initialState,\n  reducers: {\n    setCurrentPage: (state, action) => {\n      state.currentPage = action.payload;\n    },\n    changePerPage: (state, action) => {\n      state.perPage = action.payload;\n    },\n    setSortBy: (state, action) => {\n      state.sortBy = action.payload;\n    },\n    setSortOrder: (state, action) => {\n      state.sortOrder = action.payload;\n    },\n    setPlanets: (state, action) => {\n      state.planets = action.payload;\n    },\n    setSortOrder: (state, action) => {\n      state.sortOrder = action.payload;\n    },\n    setPage: (state, action) => {\n      state.page = action.payload;\n    },\n    setPerPage: (state, action) => {\n      state.perPage = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPlanetsAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchPlanetsAsync.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.planets = action.payload.results;\n    }).addCase(fetchPlanetsAsync.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  setPlanets,\n  setSortOrder,\n  setPage,\n  setPerPage,\n  changePerPage,\n  fetch,\n  setCurrentPage,\n  setSortBy\n} = planetsSlice.actions;\nexport default planetsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchPlanets","initialState","planets","sortOrder","page","perPage","fetchPlanetsAsync","params","response","planetsSlice","name","reducers","setCurrentPage","state","action","currentPage","payload","changePerPage","setSortBy","sortBy","setSortOrder","setPlanets","setPage","setPerPage","extraReducers","builder","addCase","pending","status","fulfilled","results","rejected","error","message","fetch","actions","reducer"],"sources":["C:/Users/gaston/Desktop/project/qbeyond/swapi-planets/src/features/planets/planetsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk  } from '@reduxjs/toolkit';\r\nimport { fetchPlanets } from '../planets/planetsApi';\r\n\r\nconst initialState = {\r\n  planets: [],\r\n  sortOrder: 'asc',\r\n  page: 1,\r\n  perPage: 10,\r\n};\r\n\r\nexport const fetchPlanetsAsync = createAsyncThunk('planets/fetchPlanets', async (params) => {\r\n    params.page = params.page || 1;\r\n    const response = await fetchPlanets(params);\r\n    return response;\r\n  });\r\n\r\nconst planetsSlice = createSlice({\r\n  name: 'planets',\r\n  initialState,\r\n  reducers: {\r\n    setCurrentPage: (state, action) => {\r\n        state.currentPage = action.payload;\r\n      },\r\n      changePerPage: (state, action) => {\r\n        state.perPage = action.payload;\r\n      },\r\n      setSortBy: (state, action) => {\r\n        state.sortBy = action.payload;\r\n      },\r\n      setSortOrder: (state, action) => {\r\n        state.sortOrder = action.payload;\r\n      },\r\n     setPlanets: (state, action) => {\r\n      state.planets = action.payload;\r\n    },\r\n    setSortOrder: (state, action) => {\r\n      state.sortOrder = action.payload;\r\n    },\r\n    setPage: (state, action) => {\r\n      state.page = action.payload;\r\n    },\r\n    setPerPage: (state, action) => {\r\n      state.perPage = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchPlanetsAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchPlanetsAsync.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.planets = action.payload.results;\r\n      })\r\n      .addCase(fetchPlanetsAsync.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n      });\r\n  }\r\n});\r\n\r\nexport const { setPlanets, setSortOrder, setPage, setPerPage, changePerPage, fetch, setCurrentPage, setSortBy } = planetsSlice.actions;\r\n\r\nexport default planetsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAS,kBAAkB;AACjE,SAASC,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAE,KAAK;EAChBC,IAAI,EAAE,CAAC;EACPC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGP,gBAAgB,CAAC,sBAAsB,EAAE,MAAOQ,MAAM,IAAK;EACxFA,MAAM,CAACH,IAAI,GAAGG,MAAM,CAACH,IAAI,IAAI,CAAC;EAC9B,MAAMI,QAAQ,GAAG,MAAMR,YAAY,CAACO,MAAM,CAAC;EAC3C,OAAOC,QAAQ;AACjB,CAAC,CAAC;AAEJ,MAAMC,YAAY,GAAGX,WAAW,CAAC;EAC/BY,IAAI,EAAE,SAAS;EACfT,YAAY;EACZU,QAAQ,EAAE;IACRC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACE,WAAW,GAAGD,MAAM,CAACE,OAAO;IACpC,CAAC;IACDC,aAAa,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACR,OAAO,GAAGS,MAAM,CAACE,OAAO;IAChC,CAAC;IACDE,SAAS,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACM,MAAM,GAAGL,MAAM,CAACE,OAAO;IAC/B,CAAC;IACDI,YAAY,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACV,SAAS,GAAGW,MAAM,CAACE,OAAO;IAClC,CAAC;IACFK,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACX,OAAO,GAAGY,MAAM,CAACE,OAAO;IAChC,CAAC;IACDI,YAAY,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACV,SAAS,GAAGW,MAAM,CAACE,OAAO;IAClC,CAAC;IACDM,OAAO,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACT,IAAI,GAAGU,MAAM,CAACE,OAAO;IAC7B,CAAC;IACDO,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACR,OAAO,GAAGS,MAAM,CAACE,OAAO;IAChC;EACF,CAAC;EACDQ,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,iBAAiB,CAACqB,OAAO,EAAGd,KAAK,IAAK;MAC7CA,KAAK,CAACe,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDF,OAAO,CAACpB,iBAAiB,CAACuB,SAAS,EAAE,CAAChB,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACe,MAAM,GAAG,WAAW;MAC1Bf,KAAK,CAACX,OAAO,GAAGY,MAAM,CAACE,OAAO,CAACc,OAAO;IACxC,CAAC,CAAC,CACDJ,OAAO,CAACpB,iBAAiB,CAACyB,QAAQ,EAAE,CAAClB,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACe,MAAM,GAAG,QAAQ;MACvBf,KAAK,CAACmB,KAAK,GAAGlB,MAAM,CAACkB,KAAK,CAACC,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEZ,UAAU;EAAED,YAAY;EAAEE,OAAO;EAAEC,UAAU;EAAEN,aAAa;EAAEiB,KAAK;EAAEtB,cAAc;EAAEM;AAAU,CAAC,GAAGT,YAAY,CAAC0B,OAAO;AAEtI,eAAe1B,YAAY,CAAC2B,OAAO"},"metadata":{},"sourceType":"module"}